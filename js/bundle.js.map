{"version":3,"sources":["webpack:///webpack/bootstrap cc1625dca83c9e409574","webpack:///./js/boggle.js","webpack:///./js/grid.js","webpack:///./js/dice.js","webpack:///./js/helpers.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,uBAAuB,OAAO;AAC9C;AACA;AACA,uBAAsB,iCAAiC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,EAAC;;;;;;;ACjED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,mBAAkB,eAAe;AACjC,qBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAkB,eAAe;AACjC,qBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzFA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cc1625dca83c9e409574\n **/","const Grid = require('./grid.js');\nconst NUM_ROWS = 5;\nconst NUM_COLS = 5;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n  let selectedBlocks = [];\n  let selectedWord = [];\n  const htmlGrid = document.getElementById(\"grid\");\n  const blocks = document.getElementsByClassName('block');\n  const currentDisplay = document.getElementById(\"current\");\n  let grid = new Grid(NUM_ROWS,NUM_COLS);\n  grid.placeDice();\n\n  for(let i = 0; i < NUM_ROWS*NUM_COLS; i++) { //place letters on blocks\n    let htmlBlock = blocks[i];\n    htmlBlock.innerHTML = grid.blockVal(i);\n    setTimeout(() => {htmlBlock.style.color = \"black\";}, 200);\n  }\n\n  htmlGrid.onclick = (e) => {\n    if(e.target.className.includes(\"block\")) {\n      let block = e.target;\n      if(block.id === lastSelected()) {\n        block.className = \"block\";\n        selectedBlocks.pop();\n        selectedWord.pop();\n        updateCurrentWord();\n      } else if(isValidMove(block.id)) {\n        block.className = \"block selected\";\n        selectedBlocks.push(block.id);\n        selectedWord.push(grid.blockVal(block.id));\n        updateCurrentWord();\n      } else {\n        alert(\"invalid move!\");\n      }\n    }\n  }\n\n\n  function updateCurrentWord() {\n    currentDisplay.innerHTML = getCurrentWord().toUpperCase();\n  }\n\n  function isValidMove(id) {\n    if(selectedBlocks.includes(id)) {\n      return false;\n    } else if(selectedBlocks.length === 0 || grid.isAdjacent(lastSelected(), id)) {\n      return true;\n    }  else {\n      return false;\n    }\n  }\n\n  function getCurrentWord() {\n    let word = selectedWord.join(\"\");\n    word = word.toLowerCase();\n    return word;\n  }\n\n  function lastSelected() {\n    return selectedBlocks[selectedBlocks.length - 1];\n  }\n\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/boggle.js\n ** module id = 0\n ** module chunks = 0\n **/","const Dice = require('./dice.js');\nconst randArrayRemove = require('./helpers.js').randArrayRemove;\n\nconst POSSIBLE_DICE = [\n  \"aaafrs\",\n  \"aaeeee\",\n  \"aafirs\",\n  \"adennn\",\n  \"aeeeem\",\n  \"aeegmu\",\n  \"aegmnn\",\n  \"afirsy\",\n  \"bjkqxz\",\n  \"ccenst\",\n  \"ceiilt\",\n  \"ceilpt\",\n  \"ceipst\",\n  \"ddhnot\",\n  \"dhhlor\",\n  \"dhlnor\",\n  \"dhlnor\",\n  \"eiiitt\",\n  \"emottt\",\n  \"ensssu\",\n  \"fiprsy\",\n  \"gorrvw\",\n  \"iprrry\",\n  \"nootuw\",\n  \"ooottu\"\n]\n\nclass Grid {\n\n  constructor(rows,columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.grid = new Array(rows);\n    for (let i = 0; i < rows; i++) {\n      this.grid[i] = new Array(columns);\n      this.grid[i].fill(null);\n    }\n    this.diceArray = [];\n    POSSIBLE_DICE.forEach((dice) => {\n      this.diceArray.push(new Dice(dice));\n    });\n  }\n\n  placeDice() {\n    for(let r = 0; r < this.rows; r++) {\n      for(let c = 0; c < this.columns; c++) {\n        this.grid[r][c] = randArrayRemove(this.diceArray);\n      }\n    }\n  }\n\n  blockVal(id) {\n    let index = this.parseID(id);\n    let row = index[0];\n    let col = index[1];\n    return this.grid[row][col].val();\n  }\n\n  isAdjacent(id1, id2) {\n    let index1 = this.parseID(id1);\n    let index2 = this.parseID(id2); \n    if(Math.abs(index1[0] - index2[0]) <= 1 && Math.abs(index1[1] - index2[1]) <= 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  forEach(callback) {\n    for(let r = 0; r < this.rows; r++) {\n      for(let c = 0; c < this.columns; c++) {\n        callback(this.grid[r][c]);\n      }\n    }\n    return this.grid;\n  }\n\n  parseID(id) {\n    let row = Math.floor(id/this.rows);\n    let col = id%this.rows;\n    return [row,col];\n  }\n\n}\n\nmodule.exports = Grid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/grid.js\n ** module id = 1\n ** module chunks = 0\n **/","const randArray = require('./helpers.js').randArray;\n\nclass Dice {\n\n  constructor(sides) {\n    this.sides = sides;\n    this.roll();\n  }\n\n  roll() {\n    this.value = randArray(this.sides);\n  }\n\n  val() {\n    if(this.value === \"q\") {\n      return \"Qu\";\n    } else {\n      return this.value.toUpperCase();\n    }\n  }\n}\n\nmodule.exports = Dice;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/dice.js\n ** module id = 2\n ** module chunks = 0\n **/","function randArray(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nfunction randArrayRemove(array) {\n  let index = Math.floor(Math.random() * array.length);\n  return array.splice(index,1)[0];\n}\n\nmodule.exports = {\n  randArray,\n  randArrayRemove\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/helpers.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}